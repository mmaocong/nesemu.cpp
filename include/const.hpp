#pragma once

#include <cstdint>
#include <vector>
#define MIN(a, b) ((a) < (b) ? (a) : (b))

using Byte = uint8_t;
using Word = uint16_t;
using Mem = std::vector<Byte>;

using RegB = uint8_t;  // byte-sized register
using RegW = uint16_t; // word-sized register

// Memory size of the main RAM (~16KB)
static constexpr uint32_t kRAMSize = 0x4020;
static constexpr uint32_t kVRAMSize = 4 * 1024;
static constexpr uint32_t kPaletteSize = 32;

// Master Palette:
//
//   #7C7C7C #0000FC #0000BC #4428BC #940084 #A80020 #A81000 #881400
//   #503000 #007800 #006800 #005800 #004058 #000000 #000000 #000000
//   #BCBCBC #0078F8 #0058F8 #6844FC #D800CC #E40058 #F83800 #E45C10
//   #AC7C00 #00B800 #00A800 #00A844 #008888 #000000 #000000 #000000
//   #F8F8F8 #3CBCFC #6888FC #9878F8 #F878F8 #F85898 #F87858 #FCA044
//   #F8B800 #B8F818 #58D854 #58F898 #00E8D8 #787878 #000000 #000000
//   #FCFCFC #A4E4FC #B8B8F8 #D8B8F8 #F8B8F8 #F8A4C0 #F0D0B0 #FCE0A8
//   #F8D878 #D8F878 #B8F8B8 #B8F8D8 #00FCFC #F8D8F8 #000000 #000000
static constexpr uint32_t PAL_MASTER[64] = {
    0x7C7C7C, 0x0000FC, 0x0000BC, 0x4428BC, 0x940084, 0xA80020, 0xA81000,
    0x881400, 0x503000, 0x007800, 0x006800, 0x005800, 0x004058, 0x000000,
    0x000000, 0x000000, 0xBCBCBC, 0x0078F8, 0x0058F8, 0x6844FC, 0xD800CC,
    0xE40058, 0xF83800, 0xE45C10, 0xAC7C00, 0x00B800, 0x00A800, 0x00A844,
    0x008888, 0x000000, 0x000000, 0x000000, 0xF8F8F8, 0x3CBCFC, 0x6888FC,
    0x9878F8, 0xF878F8, 0xF85898, 0xF87858, 0xFCA044, 0xF8B800, 0xB8F818,
    0x58D854, 0x58F898, 0x00E8D8, 0x787878, 0x000000, 0x000000, 0xFCFCFC,
    0xA4E4FC, 0xB8B8F8, 0xD8B8F8, 0xF8B8F8, 0xF8A4C0, 0xF0D0B0, 0xFCE0A8,
    0xF8D878, 0xD8F878, 0xB8F8B8, 0xB8F8D8, 0x00FCFC, 0xF8D8F8, 0x000000,
    0x000000,
};
