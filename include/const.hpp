#pragma once

#include <cstdint>
#include <vector>
#define MIN(a, b) ((a) < (b) ? (a) : (b))

using Byte = uint8_t;
using Word = uint16_t;
using Mem = std::vector<Byte>;

using RegB = uint8_t;  // byte-sized register
using RegW = uint16_t; // word-sized register

// Memory size of the main RAM (~16KB)
static constexpr uint32_t kRAMSize = 0x4020;
static constexpr uint32_t kVRAMSize = 4 * 1024;
static constexpr uint32_t kPaletteSize = 32;

// Master Palette:
//
//   #7C7C7C #0000FC #0000BC #4428BC #940084 #A80020 #A81000 #881400
//   #503000 #007800 #006800 #005800 #004058 #000000 #000000 #000000
//   #BCBCBC #0078F8 #0058F8 #6844FC #D800CC #E40058 #F83800 #E45C10
//   #AC7C00 #00B800 #00A800 #00A844 #008888 #000000 #000000 #000000
//   #F8F8F8 #3CBCFC #6888FC #9878F8 #F878F8 #F85898 #F87858 #FCA044
//   #F8B800 #B8F818 #58D854 #58F898 #00E8D8 #787878 #000000 #000000
//   #FCFCFC #A4E4FC #B8B8F8 #D8B8F8 #F8B8F8 #F8A4C0 #F0D0B0 #FCE0A8
//   #F8D878 #D8F878 #B8F8B8 #B8F8D8 #00FCFC #F8D8F8 #000000 #000000
static constexpr uint32_t PAL_MASTER[64] = {
    0x7C7C7CFF, 0x0000FCFF, 0x0000BCFF, 0x4428BCFF, 0x940084FF, 0xA80020FF,
    0xA81000FF, 0x881400FF, 0x503000FF, 0x007800FF, 0x006800FF, 0x005800FF,
    0x004058FF, 0x000000FF, 0x000000FF, 0x000000FF, 0xBCBCBCFF, 0x0078F8FF,
    0x0058F8FF, 0x6844FCFF, 0xD800CCFF, 0xE40058FF, 0xF83800FF, 0xE45C10FF,
    0xAC7C00FF, 0x00B800FF, 0x00A800FF, 0x00A844FF, 0x008888FF, 0x000000FF,
    0x000000FF, 0x000000FF, 0xF8F8F8FF, 0x3CBCFCFF, 0x6888FCFF, 0x9878F8FF,
    0xF878F8FF, 0xF85898FF, 0xF87858FF, 0xFCA044FF, 0xF8B800FF, 0xB8F818FF,
    0x58D854FF, 0x58F898FF, 0x00E8D8FF, 0x787878FF, 0x000000FF, 0x000000FF,
    0xFCFCFCFF, 0xA4E4FCFF, 0xB8B8F8FF, 0xD8B8F8FF, 0xF8B8F8FF, 0xF8A4C0FF,
    0xF0D0B0FF, 0xFCE0A8FF, 0xF8D878FF, 0xD8F878FF, 0xB8F8B8FF, 0xB8F8D8FF,
    0x00FCFCFF, 0xF8D8F8FF, 0x000000FF, 0x000000FF,
};
